services:
  postgres:
    image: cgr.dev/chainguard/postgres
    container_name: pg17-local
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./server/conf/pg_hba.dev.conf:/etc/postgresql/pg_hba.conf:ro
      - ./server/conf/postgresql.dev.conf:/etc/postgresql/postgresql.conf:ro
      - ./server/certs:/certs:ro
    command:
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"
      - "-c"
      - "hba_file=/etc/postgresql/pg_hba.conf"
      - "-c"
      - "ssl=on"
      - "-c"
      - "ssl_cert_file=/certs/server.crt"
      - "-c"
      - "ssl_key_file=/certs/server.key"
      - "-c"
      - "ssl_ca_file=/certs/ca.crt"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
    networks:
      - default

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: es-local
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks:
      - default

  qdrant:
    image: qdrant/qdrant:v1.3.0
    container_name: qdrant-local
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - default

  go-server:
    container_name: go-server
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./server/.env:/app/.env:ro
      - ./data:/app/data:rw
      - ./backup:/app/backup:rw
      - ./target:/app/target:rw
      - ./certs:/certs:ro
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      qdrant:
        condition: service_started
    environment:
      DB_URL: postgres://postgres:postgres@pg17-local:5432/mydb
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mydb
      DB_USER: postgres
      DB_PASSWORD: postgres
      ES_HOST: http://es-local:9200
      QDRANT_HOST: http://qdrant-local:6333
    ports:
      - "8080:8080"
    restart: unless-stopped
    command: ["./server/go-server"]
    networks:
      - default

  web:
    container_name: web-ui
    build:
      context: ./web
      dockerfile: Dockerfile
    volumes:
      - ./web/conf/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3000:80"  # Nginx in Dockerfile serves on 80, mapped to 3000 locally
    depends_on:
      - go-server
    restart: unless-stopped
    networks:
      - default

volumes:
  pg_data:
  es_data:
  qdrant_data:

networks:
  default:
    driver: bridge
